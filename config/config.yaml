# common settings
gpu: True

# data
reaction: True
data_name: slap_dataset_reactions.csv
split_dir_name: example_split

# model
encoder:
  hidden_size: 2000  # int
  depth: 6  # int, >= 3, number of linear layers (?)
  bias: False  # bool, whether to add bias to linear layers
  dropout_ratio: 0.0  # float, probability of dropout
  aggregation: mean  # str, options: [max, mean, sum]. Operation to aggregate node-centred feature vectors for graph
  activation: ReLU  # str, any activation from torch.nn can be used

decoder:
  hidden_size: 60  # int
  depth: 3  # int, number of hidden layers
  dropout_ratio: 0.0  # float, probability of dropout
  activation: ReLU  # str, any activation from torch.nn can be used
  hidden_bias: False  # bool, whether to add bias to hidden layers
  out_bias: False  # bool, whether to add bias to output layer
  out_sigmoid: True  # bool, whether to add a sigmoid layer at the end of the network

optimizer:
  weight_decay: 0
  lr: 0.001
  lr_scheduler:
    epochs: 30  # should be the same as max_epochs for the desired effect
    lr_min: 1.0e-04
    lr_warmup_step: 2
    scheduler_name: exp_with_linear_warmup

training:
  max_epochs: 30